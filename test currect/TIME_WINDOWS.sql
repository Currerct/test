--Initial Creation (10-Jan-2023) TIME_WINDOWS:



/*table creation script for "TIME_WINDOWS"*/


CREATE TABLE  "TIME_WINDOWS" 
   (	"CURRECT_DATASET_ID" NUMBER, 
	"CURRECT_TWINDOW_ID" NUMBER GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"CUST_TWINDOW_ID" VARCHAR2(30) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"CUST_TWINDOW_CODE" VARCHAR2(30) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"TWINDOW_NAME" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"SHORT_DDF" VARCHAR2(5) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"FULL_DDF" VARCHAR2(30) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"INDV_TWINDOW" VARCHAR2(1) COLLATE "USING_NLS_COMP", 
	"UDF1" VARCHAR2(500) COLLATE "USING_NLS_COMP", 
	"UDF2" VARCHAR2(500) COLLATE "USING_NLS_COMP", 
	"CUST_SORT" NUMBER, 
	"LAST_USER" VARCHAR2(30) COLLATE "USING_NLS_COMP", 
	"LAST_DATE" DATE, 
	 CONSTRAINT "TWIN_PK" PRIMARY KEY ("CURRECT_TWINDOW_ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "TWIN_UK" UNIQUE ("CURRECT_DATASET_ID", "CUST_TWINDOW_ID", "CUST_TWINDOW_CODE")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
   


/*sequence creation script for "TIME_WINDOWS"*/


    CREATE SEQUENCE   "TIME_WINDOWS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
	
	
	
/*trigger creation script for "TIME_WINDOWS"*/


CREATE OR REPLACE EDITIONABLE TRIGGER  "TIME_WINDOWS_IUTR" 
BEFORE INSERT or update
ON time_windows
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN

	:NEW.last_date := SYSDATE;

	if :NEW.last_user is null
	then
		:NEW.last_user := NVL(v('APP_USER'), USER);
	end if;	

EXCEPTION

	WHEN OTHERS THEN
		Raise_Application_Error(-20101,'Unexpected system error at level iutr(Time window) : '||SQLCODE||' --- '||SQLERRM, TRUE);

END time_windows_IUTR;

/
ALTER TRIGGER  "TIME_WINDOWS_IUTR" ENABLE
/

