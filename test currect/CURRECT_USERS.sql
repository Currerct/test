--Initial Creation (10-Jan-2023) CURRECT_USERS: 


/*table creation script for "CURRECT_USERS"*/


CREATE TABLE  "CURRECT_USERS" 
   (	"CURRECT_USER_ID" NUMBER GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"CUST_USER_ID" VARCHAR2(30) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"USER_NAME" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"PASSWORD" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"DDF" VARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"UDF1" VARCHAR2(500) COLLATE "USING_NLS_COMP", 
	"LAST_USER" VARCHAR2(30) COLLATE "USING_NLS_COMP", 
	"LAST_DATE" DATE, 
	"STATUS" NUMBER, 
	 CONSTRAINT "USER_PK" PRIMARY KEY ("CURRECT_USER_ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "USER_UK" UNIQUE ("CUST_USER_ID")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
   
   

/*sequence creation script for "CURRECT_USERS"*/


 CREATE SEQUENCE   "CURRECT_USERS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL   
 
 
   
/*trigger creation script for "CURRECT_USERS"*/


CREATE OR REPLACE EDITIONABLE TRIGGER  "CURRECT_USERS_IUTR" 
BEFORE INSERT or update
ON CURRECT_USERS
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN

	:NEW.last_date := SYSDATE;

	if :NEW.last_user is null
	then
		:NEW.last_user := NVL(v('APP_USER'), USER);
	end if;	

EXCEPTION

	WHEN OTHERS THEN
		Raise_Application_Error(-20101,'Unexpected system error at level iutr(Course year group) : '||SQLCODE||' --- '||SQLERRM, TRUE);

END CURRECT_USERS_IUTR;

/
ALTER TRIGGER  "CURRECT_USERS_IUTR" ENABLE
/